import unittest
from primetlista import Primetlista
from primet import Primet
from generator import PQgeneraattori
from keys import Keys
from decrypt import Decryption
from encrypt import Encryption


class Testprimetlista(unittest.TestCase):
    """
    testaa primelistan
    """

    def testilista(self):
        verrokki = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227,
                    229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499]
        self.assertEqual(Primetlista.lista(), verrokki)


class Testprimet(unittest.TestCase):
    """
    testaa alkulukujen testaus luokan
    """

    def testiprime(self):
        isotprimet = [662184036900686266043305387651, 107269498754639459686153895261,
                      466970157734318698514208954263, 631379121341522939869949517061]
        for i in isotprimet:
            self.assertEqual(Primet.MillerRabintesti(i), True)
        isotluvut = [662184036900686266043305387652, 107269498754639459686153895262,
                     466970157734318698514208954264, 631379121341522939869949517066]
        for i in isotluvut:
            self.assertEqual(Primet.MillerRabintesti(i), False)


class Testgenerator(unittest.TestCase):
    """
    testaa generoidut alkuluvut
    """

    def testigeneraattori(self):
        p, q = PQgeneraattori.generaattori()
        self.assertEqual(Primet.MillerRabintesti(p), True)
        self.assertEqual(Primet.MillerRabintesti(q), True)
        self.assertTrue(p != q)


class Testkeys(unittest.TestCase):
    """
    testaa julkisen ja yksityisen avaimen
    """

    def testikeys(self):
        public, tulo, totient = Keys.publickey()
        private = Keys.privatekey(totient, public)
        self.assertEqual(Primet.MillerRabintesti(public), True)
        self.assertTrue(public<totient)
        self.assertTrue(totient % private != 0)
        self.assertTrue(private>0)
        self.assertTrue((private*public) % totient == 1)


class Testencrypt(unittest.TestCase):
    """
    testaa viestin salauksen toiminnan
    """

    def testiencrypt(self):
        viesti = "testing"
        yksityinen = 4071661376889451245933966539042068133152023101978852253872959314439663755280962151908942818330724254318060341082277194496398698316737686764483328012884350175768302923714890724695823191453268890750538783557002645822614010598039178887689105940985070009762432417314518351733058482260703482926161714043011917906374756051418391862648901410232356335141830554157520506424625400537830802035444320871620345973583023899269652927542622008999762312690765771112246149298579674905652588824843585907455490345178610739997670613172750797257435161005963944092264180767057256019012957591995488283409034096994331170277184524151916724535
        julkinen = 3932063398505524794818089907326930116493737429979425480328503578824709667655374161178514141681025588845712085577134757229815911615663004820361829811103504037291937343294998450013742991937379210906730795865817248984296272566610777517746237531461221413146294107565366298094680226052329464441133581122795750580088984158423533117983973836783271116499141524290047019904182404107454560975234652519318301144831306438004229560672553449526315792377556998150310866292993373587211574357747855941327874507316978440018287081408673238738669362576021095580331115015032855986501600717110460858515401889780780123898450940944433433031
        tulo = 21718150204705401915435230071651919469911972672930848954866617996528518320368328420865139778795399409739064046993014456791689622819485505281197236482943931080788092972770219198836508056990077969899970999062916526074330096827402923521041703621924217416738096495921868293075223803583490603944050873875588765683937563767076938082420263315200751497945854093192631015181068554406299250113023205567814335047645906849292430901846676114315958735446827847626827474188832960332937013930291552343354537790435992727578391315478993915065249128601436896615965873540038953155162571804331258955899292968027387590683301383931314841801
        salattu = Encryption.encoder(viesti, julkinen, tulo)
        purettu = Decryption.decoder(salattu, yksityinen, tulo)
        self.assertTrue(viesti == purettu)


class Testdecrypt(unittest.TestCase):
    """
    testaa viestin purun toiminnan
    """

    def testidecrypt(self):
        viesti = "second test"
        yksityinen = 24096789641260957811708428685953338074858977842419719639080186060742765497797748546394396038035065118956977988614286367871096744538049458966891198587439817933655000335308586920785625469117415977599885072390604514414062698952948751896073546263667581264137382747938186499243499003311926884250175587520413390082033963309860026769079234194528871102911789719245862996158260180323652714126263939937916489369679443350844058134731772361873606921541369553216153333019435813415730165692759258852557472408814616451923625951870248502453481304610598559626185288941358508737867992206988804535833780192599156562588433646270476945331
        julkinen = 7099316371278348765758032308626224412878599611414505462493108861155143420214839072430949527142454236438386071925976626554984451142259177408855908537039514990878649331580574867401000616168222087060742912948914166749529913522001826399870912296508985842232810008044856551015155481861497166276962809144730822877339418356771701660534514739275036818348588729101247935284758300257956424957053856394870623550090737801707658090657203570438412942581840578532691912245890182398388663507243229601502391512103557796763242906805549158948660924171236932837369838956736169167912992123165749312787791188846887202846354806711748858311
        tulo = 28435833118944494451841635472427266692231701378833056833391575073624012279153589049746456813994123659687640102471400838358238583333563835205517984011890555302917101687909661313953868702320186678007855099425754275407773568443177881148222543126047599034935010470984277953356124101215816537311766858285160043152120449672205422950892775156455001116405344759354106074392098868652776363345502565067676472132915120584445095870204126187754163062583657665758722026858738863577354055720278640278677906694561452771062766217487655433148327719649607820137017494714108083366934105732580637598857552354729694871508534703796396835489
        salattu = Encryption.encoder(viesti, julkinen, tulo)
        purettu = Decryption.decoder(salattu, yksityinen, tulo)
        self.assertTrue(viesti == purettu)


if __name__ == '__main__':
    unittest.main()
